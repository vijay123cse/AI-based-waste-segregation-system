<!DOCTYPE html>
<html>
<head>
    <title>AI Waste Segregation</title>
    <style>
        body {
            font-family: sans-serif;
            display: flex;
            flex-direction: column;
            align-items: center;
            justify-content: center;
            height: 100vh;
            margin: 0;
        }

        #upload-container {
            border: 2px dashed #ccc;
            padding: 20px;
            text-align: center;
            cursor: pointer;
        }

        #image-preview {
            max-width: 300px;
            max-height: 300px;
            margin-top: 20px;
            display: none;
        }

        #result-container {
            margin-top: 20px;
            text-align: center;
        }
    </style>
</head>
<body>
    <h1>AI Waste Segregation</h1>

    <div id="upload-container">
        <input type="file" id="image-upload" accept="image/*" style="display: none;">
        <label for="image-upload">Click here to upload an image</label>
        <img id="image-preview" src="#" alt="Image Preview">
    </div>

    <div id="result-container">
        <p id="result-text"></p>
    </div>

    <script>
        const imageUpload = document.getElementById('image-upload');
        const imagePreview = document.getElementById('image-preview');
        const resultText = document.getElementById('result-text');

        imageUpload.addEventListener('change', function(event) {
            const file = event.target.files[0];
            if (file) {
                const reader = new FileReader();
                reader.onload = function(e) {
                    imagePreview.src = e.target.result;
                    imagePreview.style.display = 'block';
                    // Here, you would typically send the image to your AI model
                    // and then display the result.
                    // For this example, we'll simulate a result.
                    simulateAIProcessing(file);
                };
                reader.readAsDataURL(file);
            } else {
                imagePreview.style.display = 'none';
                resultText.textContent = '';
            }
        });

        function simulateAIProcessing(file) {
            // Simulate sending the image to an AI model and receiving a result.
            // In a real application, you would use fetch or XMLHttpRequest to send
            // the image to your server and get the AI's response.
            setTimeout(() => {
                const randomResult = Math.random();
                let wasteType = '';

                if (randomResult < 0.3) {
                    wasteType = 'Recyclable (Plastic)';
                } else if (randomResult < 0.6) {
                    wasteType = 'Organic Waste';
                } else {
                    wasteType = 'General Waste';
                }

                resultText.textContent = 'Detected Waste Type: ' + wasteType;
            }, 1500); // Simulate processing time
        }
    </script>
</body>
</html>

